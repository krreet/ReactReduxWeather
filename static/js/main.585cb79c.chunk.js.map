{"version":3,"sources":["Constants.js","actions.js","store.js","MyLocation.js","helpers.js","Temperature.js","WindSpeed.js","Spinner.js","Forecast.js","App.js","index.js"],"names":["LOCATIONS","name","value","APP_ID","WEATHER_ENDPOINT","GET_WEATHER_SUCCESS","GET_WEATHER_BEGIN","GET_WEATHER_ERROR","initialState","weather","weatherIsLoading","weatherError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","locations","locationsError","error","applyMiddleware","thunk","MyLocation","useState","selectedButton","setSelectedButton","dispatch","useDispatch","handleClick","loc","index","e","preventDefault","getState","fetch","then","res","json","catch","getWeather","className","map","location","key","style","backgroundColor","onClick","convertToF","celsius","Temperature","props","color","cel","temp","toFixed","WindSpeed","speed","Spinner","connect","isLoading","tempColor","setTempColor","setCel","icon","main","iconUrl","useEffect","tempF","Math","round","toString","description","toUpperCase","src","alt","wind","App","href","target","rel","Constants","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.585cb79c.chunk.js","sourcesContent":["export const LOCATIONS = [\r\n  { name: \"London\", value: \"London,GB\" },\r\n  { name: \"Birmingham\", value: \"Birmingham,GB\" },\r\n  { name: \"Manchester\", value: \"Manchester,GB\" }\r\n];\r\nexport const APP_ID = \"afebe26ca128f00237c10ba312eba8b7\";\r\nexport const WEATHER_ENDPOINT =\r\n  \"https://api.openweathermap.org/data/2.5/weather?q=\";\r\n","import { APP_ID, WEATHER_ENDPOINT } from \"./Constants\";\r\nexport const GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\";\r\nexport const GET_WEATHER_BEGIN = \"GET_WEATHER_BEGIN\";\r\nexport const GET_WEATHER_ERROR = \"GET_WEATHER_ERROR\";\r\n\r\nexport function getWeather(loc) {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: GET_WEATHER_BEGIN });\r\n    return fetch(`${WEATHER_ENDPOINT + loc}&APPID=${APP_ID}&units=metric`)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        dispatch({\r\n          type: GET_WEATHER_SUCCESS,\r\n          weather: json\r\n        });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: GET_WEATHER_ERROR, error });\r\n      });\r\n  };\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  GET_WEATHER_BEGIN,\r\n  GET_WEATHER_SUCCESS,\r\n  GET_WEATHER_ERROR\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n  weather: null,\r\n  weatherIsLoading: false,\r\n  weatherError: null\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_WEATHER_BEGIN:\r\n      return {\r\n        ...state,\r\n        locations: null,\r\n        locationsError: null,\r\n        weatherIsLoading: true,\r\n        weatherError: null\r\n      };\r\n    case GET_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weatherIsLoading: false,\r\n        weather: action.weather\r\n      };\r\n    case GET_WEATHER_ERROR:\r\n      return {\r\n        ...state,\r\n        weatherIsLoading: false,\r\n        weatherError: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(\r\n  reducer,\r\n  /* preloadedState, */ composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getWeather } from \"./actions\";\r\n\r\nexport default function MyLocation({ locations }) {\r\n  const [selectedButton, setSelectedButton] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (loc, index) => e => {\r\n    e.preventDefault();\r\n    setSelectedButton(index);\r\n    dispatch(getWeather(loc));\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-locations\">\r\n      {locations.map((location, index) => (\r\n        <button\r\n          key={index}\r\n          style={{ backgroundColor: selectedButton === index ? \"teal\" : \"\" }}\r\n          onClick={handleClick(location.value, index)}\r\n        >\r\n          {location.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","export const convertToF = celsius => celsius * (9 / 5) + 32;\r\n","import React from \"react\";\r\nimport { convertToF } from \"./helpers\";\r\n\r\nfunction Temperature(props) {\r\n  return (\r\n    <span className=\"weather-forecast--temp\" style={{ color: props.color }}>\r\n      {props.cel\r\n        ? props.temp + \"\\u00b0C\"\r\n        : convertToF(props.temp).toFixed(2) + \"\\u00b0F\"}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Temperature;\r\n","import React from \"react\";\r\n\r\nfunction WindSpeed(props) {\r\n  return (\r\n    <span className=\"weather-forecast--temp\" style={{ color: props.color }}>\r\n      {props.speed} m/s\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default WindSpeed;\r\n","import React from 'react';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Temperature from \"./Temperature\";\r\nimport WindSpeed from \"./WindSpeed\";\r\nimport Spinner from \"./Spinner\";\r\nimport { convertToF } from \"./helpers\";\r\n\r\nfunction Forecast(props) {\r\n  const { weather, isLoading, error } = props;\r\n\r\n  const [tempColor, setTempColor] = useState(\"transparent\");\r\n  const [cel, setCel] = useState(true);\r\n\r\n  const icon = weather ? weather.weather[0].icon : null;\r\n\r\n  const { temp } = weather ? weather.main : {};\r\n\r\n  const iconUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n\r\n  useEffect(() => {\r\n    const tempF = Math.round(convertToF(temp));\r\n    if (tempF < 40) setTempColor(\"skyblue\");\r\n    if (tempF >= 40) setTempColor(\"royalblue\");\r\n    if (tempF >= 55) setTempColor(\"mediumturquoise\");\r\n    if (tempF >= 70) setTempColor(\"goldenrod\");\r\n    if (tempF >= 85) setTempColor(\"orange\");\r\n    if (tempF >= 100) setTempColor(\"orangered\");\r\n    if (tempF >= 115) setTempColor(\"firebrock\");\r\n  }, [temp, setTempColor]);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n  if (error) {\r\n    return <pre className=\"error\">{error.toString()}</pre>;\r\n  }\r\n\r\n  // const { weather_state_abbr, weather_state_name, the_temp } = weather\r\n  //   ? weather.consolidated_weather[0]\r\n  //   : {};\r\n\r\n  return weather ? (\r\n    <div className=\"weather-forecast\">\r\n      <h2>{`${weather.name} `}</h2>\r\n      <h3>{`${weather.weather[0].description.toUpperCase()}`}</h3>\r\n      <figure>\r\n        <img\r\n          className=\"weather-forecast--icon\"\r\n          src={iconUrl}\r\n          alt={weather.weather[0].description}\r\n        />\r\n        <figcaption>\r\n          <Temperature temp={temp} color={tempColor} cel={cel} />\r\n        </figcaption>\r\n        <figcaption>\r\n          <WindSpeed color={tempColor} speed={weather.wind.speed} />\r\n        </figcaption>\r\n      </figure>\r\n      <footer>\r\n        {cel ? (\r\n          <button onClick={() => setCel(false)}>°F</button>\r\n        ) : (\r\n          <button onClick={() => setCel(true)}>°C</button>\r\n        )}\r\n      </footer>\r\n    </div>\r\n  ) : (\r\n    <span className=\"weather-forecast--temp\" style={{ color: \"orange\" }}>\r\n      How's The Weather ?\r\n    </span>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  weather: state.weather,\r\n  isLoading: state.weatherIsLoading,\r\n  error: state.weatherError\r\n});\r\n\r\nexport default connect(mapStateToProps)(Forecast);\r\n","import React from \"react\";\r\nimport MyLocation from \"./MyLocation\";\r\nimport Forecast from \"./Forecast\";\r\nimport * as Constants from \"./Constants\";\r\n/*\r\n * Based on lessons from \"Pure Redux\" course by Dave Ceddia\r\n * https://daveceddia.com/\r\n */\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Live UK Weather</h1>\r\n      <p>\r\n        Data provided by{\" \"}\r\n        <a\r\n          href=\"https://openweathermap.org/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          OpenWeather\r\n        </a>\r\n      </p>\r\n      <MyLocation locations={Constants.LOCATIONS} />\r\n      <Forecast />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport App from './App';\r\n\r\nimport './styles.css';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}